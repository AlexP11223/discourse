name: Discourse

on: [push]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    env:
      DISCOURSE_HOSTNAME: www.example.com
      RUBY_GLOBAL_METHOD_CACHE_SIZE: 131072
      BUILD_TYPE: ${{ matrix.build_types }}
      RAILS_ENV: test
      DATABASE_URL: postgresql://discourse:discourse@localhost/discourse_test


    strategy:
      fail-fast: true

      matrix:
        build_types: [ 'BACKEND', 'FRONTEND', 'LINT']
        os: [ ubuntu-16.04 ]
        ruby: [ '2.6.3' ]
        postgres: [ '12' ]
        redis: [ '4.x' ]

    services:
      postgres:
        image: postgres:11.5
        ports: ["5432:5432"]
        env:
          POSTGRES_USER: discourse
          POSTGRES_PASSWORD: discourse
          POSTGRES_DB: discourse_test
        options: >-
          --mount type=tmpfs,destination=/var/lib/postgresql/data
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@master
        with:
          fetch-depth: 1

      - name: Setup packages
        run: |
          echo 'deb http://apt.postgresql.org/pub/repos/apt/ jessie-pgdg main' | sudo tee /etc/apt/sources.list.d/pgdg.list > /dev/null
          wget --no-check-certificate -q https://www.postgresql.org/media/keys/ACCC4CF8.asc -O- | sudo -u root apt-key add -
          sudo apt-get -yqq install postgresql-client-11.5 libpq-dev gifsicle jpegoptim optipng jhead

      - name: Setup redis
        uses: shogo82148/actions-setup-redis@v1
        with:
          redis-version: ${{ matrix.redis }}

      - name: Setup ruby
        uses: actions/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          architecture: 'x64'

      - uses: actions/cache@v1
        id: bundler-cache
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gem-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gem-

      - name: Setup bundler
        run: gem install bundler -v 1.17.3 --no-doc
      
      - name: Setup gems
        run: bundle install --without development --deployment --jobs 4 --retry 3
        if: steps.bundler-cache.outputs.cache-hit != 'true'

      - uses: actions/cache@v1
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Yarn install
        run: yarn install --dev
        if: steps.yarn-cache.outputs.cache-hit != 'true'

      - name: Create database          
        run: bin/rake db:create db:migrate

      - name: Rubocop
        if: env.BUILD_TYPE == 'LINT'
        run: bundle exec rubocop .
        
      - name: RSpec
        if: env.BUILD_TYPE == 'BACKEND'
        run: |
          bundle exec rspec
          bundle exec rake plugin:spec

      - name: QUnit
        if: env.BUILD_TYPE == 'FRONTEND'
        run: |
          bundle exec rake qunit:test['1200000']
          bundle exec rake qunit:test['1200000','/wizard/qunit']
          bundle exec rake plugin:qunit
        
